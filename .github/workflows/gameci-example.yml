name: Actions ðŸ˜Ž

on: [push, pull_request]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: self-hosted
    steps:

      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Git LFS
      #- name: Create LFS file list
      #  run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Create LFS file list
        shell: powershell  # æ”¹ç‚º Windows PowerShell
        run: |
          git lfs ls-files -l | ForEach-Object { ($_ -split '\s+')[0] } | Sort-Object | Out-File -Encoding UTF8 .lfs-assets-id
      
      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Debug Docker workspace
        run: |
            Write-Host "Checking workspace directory inside Docker:"
            Get-ChildItem /github/workspace
            Write-Host "Checking project directory inside Docker:"
            Get-ChildItem /github/workspace/unity-github-action-test/unity-github-action-test
            Write-Host "Done checking."

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: /github/workspace/unity-github-action-test/unity-github-action-test

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build